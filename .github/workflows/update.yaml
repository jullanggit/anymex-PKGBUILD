# .github/workflows/auto-update.yml
name: Auto-update AUR & GitHub PKGBUILD

on:
  schedule:
    - cron: "0 2 * * *" # daily @ 02:00 UTC
  workflow_dispatch: # manual trigger

jobs:
  update:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged

    steps:
      # 1. Checkout the packaging repo (this repo)
      - name: Checkout packaging repo
        uses: actions/checkout@v4
        with:
          # ensure we can push back via GITHUB_TOKEN
          persist-credentials: true
          path: pkg

      # 2. Install Arch tools
      - name: Install Arch tooling
        run: |
          pacman -Sy --noconfirm \
            git \
            base-devel \
            pacman-contrib

      # 3. Checkout upstream source to detect new version
      - name: Checkout upstream repo
        uses: actions/checkout@v4
        with:
          repository: RyanYuuki/AnymeX
          path: upstream
          fetch-depth: 0

      # 4. Determine latest upstream tag (assumes tags of form vX.Y.Z)
      - name: Get latest upstream version
        id: ver
        run: |
          cd upstream
          latest=$(git tag --sort=v:refname | tail -n1)
          echo "Upstream tag: $latest"
          echo "::set-output name=pkgver::${latest#v}"

      # 5. Bump PKGBUILD & regenerate .SRCINFO
      - name: Update PKGBUILD & .SRCINFO
        run: |
          cd pkg
          # bump pkgver
          sed -i "s/^pkgver=.*/pkgver=${{ steps.ver.outputs.pkgver }}/" PKGBUILD
          # reset pkgrel
          sed -i 's/^pkgrel=.*/pkgrel=1/' PKGBUILD
          # recompute checksums & write .SRCINFO
          updpkgsums
          # avoid being flagged as root by makepkg
          EUID=1000 makepkg --printsrcinfo > .SRCINFO

      # 6. Commit changes (if any)
      - name: Commit bump
        run: |
          cd pkg
          git config user.name  "GitHub Actions"
          git config user.email "actions@github.com"
          git add PKGBUILD .SRCINFO
          if git diff --cached --quiet; then
            echo "No version change; exiting early."
            exit 0
          fi
          git commit -m "ci: bump to ${{ steps.ver.outputs.pkgver }}"

      # 7. Push to GitHub origin
      - name: Push to GitHub
        run: |
          cd pkg
          git push

      # 8. Setup AUR SSH key and add remote
      - name: Setup SSH and add AUR remote
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
      - name: Add AUR remote
        run: |
          cd pkg
          git remote add aur ssh://aur@aur.archlinux.org/anymex-bin.git

      # 9. Push the same commit to AUR
      - name: Push to AUR
        run: |
          cd pkg
          git push aur HEAD:master
